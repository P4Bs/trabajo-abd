-- CONSIDERAMOS UNA BUENA IDEA LA INCLUSION DE UNA SECUENCIA PARA LOS IDS DE LAS TRANSACCIONES
CREATE SEQUENCE SQ_TRANSACCION START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE PACKAGE BODY PK_OPERATIVA AS
    PROCEDURE INSERTAR_TRANSACCION(FECHA_INST TRANSACCION.FECHA_INSTRUCCION%TYPE, CANTIDAD_TRANS TRANSACCION.CANTIDAD%TYPE,
                                    FECHA_EJEC TRANSACCION.FECHA_EJECUCION%TYPE, TIPO_TRANS TRANSACCION.TIPO%TYPE,
                                    COMISION_TRANS TRANSACCION.COMISION%TYPE, INTERNACIONAL_TRANS TRANSACCION.INTERNACIONAL%TYPE,
                                    DIVISA_ORIGEN TRANSACCION.DIVISA_ABREV_ORIGEN%TYPE, DIVISA_DESTINO TRANSACCION.DIVISA_ABREV_DESTINO%TYPE,
                                    IBAN_ORIGEN TRANSACCION.CUENTA_IBAN_ORIGEN%TYPE, IBAN_DESTINO TRANSACCION.CUENTA_IBAN_DESTINO%TYPE) IS
        ES_POOLED_ORIGEN        NUMBER;
        ES_POOLED_DESTINO       NUMBER;
        IBAN_REFERENCIA_ORIGEN  CTA_REF.IBAN%TYPE;
        IBAN_REFERENCIA_DESTINO CTA_REF.IBAN%TYPE;
        SALDO_ORIGEN            CTA_REF.SALDO%TYPE;
        SALDO_DESTINO           CTA_REF.SALDO%TYPE;
        CAMBIO_EUR_ORIGEN       DIVISA.CAMBIO_EUR%TYPE;
        CAMBIO_EUR_DESTINO      DIVISA.CAMBIO_EUR%TYPE;
        
        BEGIN
            SELECT COUNT(IBAN_ORIGEN) INTO ES_POOLED_ORIGEN FROM CTA_POOLED P WHERE P.IBAN = IBAN_ORIGEN;
            SELECT COUNT(IBAN_DESTINO) INTO ES_POOLED_DESTINO FROM CTA_POOLED P WHERE P.IBAN = IBAN_DESTINO;
            
            IF ES_POOLED_ORIGEN > 0 THEN
                SELECT R.IBAN, R.SALDO INTO IBAN_REFERENCIA_ORIGEN, SALDO_ORIGEN 
                    FROM DEPOSITADA_EN D JOIN CTA_REF R ON (D.CTA_REF_IBAN = R.IBAN) 
                    WHERE D.CTA_POOLED_IBAN = IBAN_ORIGEN AND R.DIVISA_ABREV = DIVISA_ORIGEN;
            ELSE
                SELECT R.IBAN, R.SALDO INTO IBAN_REFERENCIA_ORIGEN, SALDO_ORIGEN
                    FROM SEGREGADA S JOIN CTA_REF R ON (S.CTA_REF_IBAN = R.IBAN)
                    WHERE S.IBAN = IBAN_ORIGEN;
            END IF;
            
            IF ES_POOLED_DESTINO > 0 THEN
                SELECT R.IBAN, R.SALDO INTO IBAN_REFERENCIA_DESTINO, SALDO_DESTINO
                    FROM DEPOSITADA_EN D JOIN CTA_REF R ON (D.CTA_REF_IBAN = R.IBAN) 
                    WHERE D.CTA_POOLED_IBAN = IBAN_DESTINO AND R.DIVISA_ABREV = DIVISA_DESTINO;
            ELSE
                SELECT R.IBAN, R.SALDO INTO IBAN_REFERENCIA_DESTINO, SALDO_DESTINO
                    FROM SEGREGADA S JOIN CTA_REF R ON (S.CTA_REF_IBAN = R.IBAN)
                    WHERE S.IBAN = IBAN_DESTINO;
            END IF;
            
            SELECT CAMBIO_EUR INTO CAMBIO_EUR_ORIGEN
                FROM DIVISA
                WHERE ABREV = DIVISA_ORIGEN;
                
            SELECT CAMBIO_EUR INTO CAMBIO_EUR_DESTINO
                FROM DIVISA
                WHERE ABREV = DIVISA_DESTINO;
                
            
            UPDATE CTA_REF
                SET
                    SALDO = SALDO_ORIGEN - CANTIDAD_TRANS/CAMBIO_EUR_ORIGEN
                WHERE IBAN = IBAN_REFERENCIA_ORIGEN;
            
            UPDATE CTA_REF
                SET
                    SALDO = SALDO_DESTINO + CANTIDAD_TRANS/CAMBIO_EUR_DESTINO
                WHERE IBAN = IBAN_REFERENCIA_DESTINO;
            
            INSERT INTO TRANSACCION
                (ID, FECHA_INSTRUCCION, CANTIDAD, FECHA_EJECUCION, TIPO, COMISION, INTERNACIONAL, DIVISA_ABREV_ORIGEN, DIVISA_ABREV_DESTINO, CUENTA_IBAN_ORIGEN, CUENTA_IBAN_DESTINO)
                VALUES
                (SQ_TRANSACCION.NEXTVAL, FECHA_INST, CANTIDAD_TRANS, FECHA_EJEC, TIPO_TRANS, COMISION_TRANS, INTERNACIONAL_TRANS, DIVISA_ORIGEN, DIVISA_DESTINO, IBAN_ORIGEN, IBAN_DESTINO);
            COMMIT;
        END;

    PROCEDURE CAMBIO_DIVISA(IBAN_ORIGEN TRANSACCION.CUENTA_IBAN_ORIGEN%TYPE, IBAN_DESTINO TRANSACCION.CUENTA_IBAN_DESTINO%TYPE,
                            DIVISA_ORIGEN TRANSACCION.DIVISA_ABREV_ORIGEN%TYPE, DIVISA_DESTINO TRANSACCION.DIVISA_ABREV_DESTINO%TYPE) IS
        IBAN_REFERENCIA_ORIGEN  CTA_REF.IBAN%TYPE;
        IBAN_REFERENCIA_DESTINO CTA_REF.IBAN%TYPE;
        SALDO_ORIGEN            CTA_REF.SALDO%TYPE;
        SALDO_DESTINO           CTA_REF.SALDO%TYPE;
        CAMBIO_EUR_ORIGEN       DIVISA.CAMBIO_EUR%TYPE;
        CAMBIO_EUR_DESTINO      DIVISA.CAMBIO_EUR%TYPE;
        
        BEGIN
            SELECT R.IBAN, R.SALDO, D.CAMBIO_EUR INTO IBAN_REFERENCIA_ORIGEN, SALDO_ORIGEN, CAMBIO_EUR_ORIGEN
                FROM DEPOSITADA_EN DE JOIN CTA_REF R ON (DE.CTA_REF_IBAN = R.IBAN) JOIN DIVISA D ON (R.DIVISA_ABREV = D.ABREV)
                WHERE DE.CTA_POOLED_IBAN = IBAN_ORIGEN AND R.DIVISA_ABREV = DIVISA_ORIGEN;
                
            SELECT R.IBAN, R.SALDO, D.CAMBIO_EUR INTO IBAN_REFERENCIA_DESTINO, SALDO_DESTINO, CAMBIO_EUR_DESTINO
                FROM DEPOSITADA_EN DE JOIN CTA_REF R ON (DE.CTA_REF_IBAN = R.IBAN) JOIN DIVISA D ON (R.DIVISA_ABREV = D.ABREV)
                WHERE DE.CTA_POOLED_IBAN = IBAN_DESTINO AND R.DIVISA_ABREV = DIVISA_DESTINO;
                
            UPDATE CTA_REF
                SET
                    SALDO = 0
                WHERE IBAN = IBAN_REFERENCIA_ORIGEN;
            
            UPDATE CTA_REF
                SET
                    SALDO = SALDO_DESTINO + SALDO_ORIGEN * CAMBIO_EUR_ORIGEN/CAMBIO_EUR_DESTINO
                WHERE IBAN = IBAN_REFERENCIA_DESTINO;
                
            INSERT INTO TRANSACCION
                (ID, FECHA_INSTRUCCION, CANTIDAD, FECHA_EJECUCION, TIPO, COMISION, INTERNACIONAL, DIVISA_ABREV_ORIGEN, DIVISA_ABREV_DESTINO, CUENTA_IBAN_ORIGEN, CUENTA_IBAN_DESTINO)
                VALUES
                (SQ_TRANSACCION.NEXTVAL, SYSDATE(), SALDO_ORIGEN * CAMBIO_EUR_ORIGEN, NULL, 'CAMBIO_DIVISA', NULL, NULL, DIVISA_ORIGEN, DIVISA_DESTINO, IBAN_ORIGEN, IBAN_DESTINO);
            COMMIT;
        END;
END PK_OPERATIVA;