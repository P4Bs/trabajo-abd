CREATE OR REPLACE PACKAGE BODY PK_GESTION_CUENTAS AS
    PROCEDURE APERTURA_CUENTA(ID_CLIENTE IN CLIENTE.ID%TYPE, 
                                IBAN_CUENTA IN CUENTA.IBAN%TYPE, SWIFT_CUENTA IN CUENTA.SWIFT%TYPE,
                                FECHA_APERTURA_FINTECH IN CTA_FINTECH.FECHA_APERTURA%TYPE, FECHA_CIERRE_FINTECH IN CTA_FINTECH.FECHA_CIERRE%TYPE,
                                CLASIFICACION_FINTECH IN CTA_FINTECH.CLASIFICACION%TYPE,
                                IBAN_POOLED IN CUENTA.IBAN%TYPE, IBAN_SEGREGADA IN CUENTA.IBAN%TYPE,
                                COMISION_SEG IN SEGREGADA.COMISION%TYPE,
                                SWIFT_REF IN CUENTA.SWIFT%TYPE,
                                BANCO_REF IN CTA_REF.NOMBRE_BANCO%TYPE, SUCURSAL_REF IN CTA_REF.SUCURSAL%TYPE,
                                PAIS_REF IN CTA_REF.PAIS%TYPE, SALDO_REF IN CTA_REF.SALDO%TYPE,
                                FECHA_APERTURA_REF IN CTA_REF.FECHA_APERTURA%TYPE, ESTADO_REF IN CTA_REF.ESTADO%TYPE,
                                DIVISA_REF IN CTA_REF.DIVISA_ABREV%TYPE) IS        
        ESTA_CLIENTE        NUMBER;
        IBAN_REFERENCIA     CUENTA.IBAN%TYPE;
        ESTADO_CLIENTE      CLIENTE.ESTADO%TYPE;
        
        BEGIN
            SAVEPOINT APERTURA_CUENTA;
            SELECT COUNT(C.ID) INTO ESTA_CLIENTE FROM CLIENTE C WHERE C.ID = ID_CLIENTE;
    
            IF ESTA_CLIENTE != 0 THEN
                SELECT C.ESTADO INTO ESTADO_CLIENTE FROM CLIENTE C WHERE C.ID = ID_CLIENTE;
                
                IF ESTADO_CLIENTE = 'BAJA' THEN
                    RAISE CLIENTE_DADO_BAJA_EXCEP;
                ELSIF IBAN_POOLED IS NOT NULL AND IBAN_SEGREGADA IS NOT NULL THEN
                    RAISE POOLED_Y_SEGREGADA_EXCEP;
                ELSIF IBAN_POOLED IS NULL AND IBAN_SEGREGADA IS NULL THEN
                    RAISE TIPO_CUENTA_NO_ESPECIFICADO_EXCEP;
                ELSIF IBAN_POOLED IS NOT NULL THEN
                    IBAN_REFERENCIA := IBAN_POOLED;
                ELSIF IBAN_SEGREGADA IS NOT NULL THEN
                    IBAN_REFERENCIA := IBAN_SEGREGADA;
                END IF;
                
                INSERT INTO CUENTA (IBAN, SWIFT) VALUES (IBAN_CUENTA, SWIFT_CUENTA);
                INSERT INTO CTA_FINTECH
                    (IBAN, ESTADO, FECHA_APERTURA, FECHA_CIERRE, CLASIFICACION, CLIENTE_ID)
                VALUES
                    (IBAN_CUENTA, 'ABIERTA', FECHA_APERTURA_FINTECH, FECHA_CIERRE_FINTECH, CLASIFICACION_FINTECH, ID_CLIENTE);
                    
                IF SALDO_REF < 0 THEN
                    RAISE SALDO_NEGATIVO_EXCEP;
                END IF;
                    
                INSERT INTO CUENTA (IBAN, SWIFT) VALUES (IBAN_REFERENCIA, SWIFT_REF);
                        
                INSERT INTO CTA_REF
                    (IBAN, NOMBRE_BANCO, SUCURSAL, PAIS, SALDO, FECHA_APERTURA, ESTADO, DIVISA_ABREV)
                VALUES
                    (IBAN_REFERENCIA, BANCO_REF, SUCURSAL_REF, PAIS_REF, SALDO_REF, FECHA_APERTURA_REF, ESTADO_REF, DIVISA_REF);
                
                IF IBAN_POOLED IS NOT NULL THEN
                    INSERT INTO CTA_POOLED (IBAN) VALUES (IBAN_CUENTA);
                    
                    INSERT INTO DEPOSITADA_EN (SALDO, CTA_POOLED_IBAN, CTA_REF_IBAN) VALUES (SALDO_REF, IBAN_CUENTA, IBAN_POOLED);
                ELSIF IBAN_SEGREGADA IS NOT NULL THEN
                    INSERT INTO SEGREGADA (IBAN, COMISION, CTA_REF_IBAN) VALUES (IBAN_CUENTA, COMISION_SEG, IBAN_SEGREGADA);
                END IF;
            ELSE
                RAISE CLIENTE_INEXISTENTE_EXCEP;
            END IF;
            COMMIT;
        EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK TO APERTURA_CUENTA;
                RAISE;
        END;
    
    PROCEDURE CIERRE_CUENTA(IBAN_CUENTA IN CUENTA.IBAN%TYPE) IS
        CURSOR SALDOS IS SELECT D.SALDO, D.CTA_REF_IBAN FROM DEPOSITADA_EN D WHERE D.CTA_POOLED_IBAN = IBAN_CUENTA;
        SALDO DEPOSITADA_EN.SALDO%TYPE;
        IBAN_REF_POOLED DEPOSITADA_EN.CTA_REF_IBAN%TYPE;
        IBAN_REF_SEGREGADA CTA_REF.IBAN%TYPE;
        
        ES_POOLED       NUMBER;
        ES_SEGREGADA    NUMBER;
        SALDO_REF       CTA_REF.SALDO%TYPE;
        
        BEGIN
            SAVEPOINT CIERRE_CUENTA;
            SELECT COUNT(P.IBAN) INTO ES_POOLED FROM CTA_POOLED P WHERE P.IBAN = IBAN_CUENTA;
            SELECT COUNT(S.IBAN) INTO ES_SEGREGADA FROM SEGREGADA S WHERE S.IBAN = IBAN_CUENTA;
            
            IF ES_POOLED != 0 THEN
                OPEN SALDOS;
                LOOP
                    FETCH SALDOS INTO SALDO, IBAN_REF_POOLED;
                    IF SALDOS%FOUND THEN
                        IF SALDO > 0 THEN
                            RAISE SALDO_MAYOR_CERO_EXCEP;
                        ELSE
                            DELETE FROM DEPOSITADA_EN D WHERE D.CTA_POOLED_IBAN = IBAN_CUENTA AND D.CTA_REF_IBAN = IBAN_REF_POOLED;
                        END IF;
                    ELSE
                        EXIT;
                    END IF; 
                END LOOP;
            ELSIF ES_SEGREGADA != 0 THEN
                SELECT C.SALDO, C.IBAN INTO SALDO_REF, IBAN_REF_SEGREGADA FROM SEGREGADA S LEFT JOIN CTA_REF C ON (S.CTA_REF_IBAN = C.IBAN) WHERE S.IBAN = IBAN_CUENTA;
                IF SALDO_REF > 0 THEN
                    RAISE SALDO_MAYOR_CERO_EXCEP;
                ELSE
                    UPDATE CTA_REF R
                        SET
                            ESTADO = 'CERRADA'
                        WHERE R.IBAN = IBAN_REF_SEGREGADA;
                END IF;
                
            END IF;
            
            UPDATE CTA_FINTECH F
                SET
                    F.ESTADO = 'CERRADA',
                    F.FECHA_CIERRE = SYSDATE
                WHERE F.IBAN = IBAN_CUENTA;
            COMMIT;
        EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK TO CIERRE_CUENTA;
                RAISE;
        END;
END PK_GESTION_CUENTAS;