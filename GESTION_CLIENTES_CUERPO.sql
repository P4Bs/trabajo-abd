CREATE OR REPLACE PACKAGE BODY PK_GESTION_CLIENTES AS
    PROCEDURE ALTA_CLIENTE(ID IN CLIENTE.ID%TYPE, IDENT IN CLIENTE.IDENT%TYPE,
                            TIPO_CLIENTE IN CLIENTE.TIPO_CLIENTE%TYPE, ESTADO IN CLIENTE.ESTADO%TYPE,
                            FECHA_ALTA IN CLIENTE.FECHA_ALTA%TYPE, FECHA_BAJA IN CLIENTE.FECHA_BAJA%TYPE,
                            DIRECCION IN CLIENTE.DIRECCION%TYPE, CIUDAD IN CLIENTE.CIUDAD%TYPE, 
                            CODIGO_POSTAL IN CLIENTE.CODIGO_POSTAL%TYPE, PAIS IN CLIENTE.PAIS%TYPE,
                            RAZON_SOCIAL IN EMPRESA.RAZON_SOCIAL%TYPE, 
                            NOMBRE IN INDIVIDUAL.NOMBRE%TYPE, APELLIDO IN INDIVIDUAL.APELLIDO%TYPE, 
                            FECHA_NACIMIENTO IN INDIVIDUAL.FECHA_NACIMIENTO%TYPE) IS
        
        BEGIN
            SAVEPOINT ALTA_CLIENTE;
            -- PARA EL EJERCICIO 2.B DONDE PONE ID HABRIA QUE PONER SQ_CLIENTE.NEXTVAL
            IF TIPO_CLIENTE = 'FISICA' THEN
                INSERT INTO CLIENTE VALUES(ID, IDENT, TIPO_CLIENTE, ESTADO, FECHA_ALTA, FECHA_BAJA, DIRECCION, CIUDAD, CODIGO_POSTAL, PAIS);
                INSERT INTO INDIVIDUAL VALUES(ID, NOMBRE, APELLIDO, FECHA_NACIMIENTO);
            ELSIF TIPO_CLIENTE = 'JURIDICA' THEN
                INSERT INTO CLIENTE VALUES(ID, IDENT, TIPO_CLIENTE, ESTADO, FECHA_ALTA, FECHA_BAJA, DIRECCION, CIUDAD, CODIGO_POSTAL, PAIS);
                INSERT INTO EMPRESA VALUES(ID, RAZON_SOCIAL);
            ELSE
                RAISE TIPO_CLIENTE_EXCEP;
            END IF;
            COMMIT;
        EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK TO ALTA_CLIENTE;
                RAISE;
        END;
        
    PROCEDURE MODIFICAR_CLIENTE(IDENTIDAD IN CLIENTE.IDENT%TYPE, EST IN CLIENTE.ESTADO%TYPE,
                                FB IN CLIENTE.FECHA_BAJA%TYPE, DIR IN CLIENTE.DIRECCION%TYPE,
                                CIUD IN CLIENTE.CIUDAD%TYPE, CP IN CLIENTE.CODIGO_POSTAL%TYPE,
                                P IN CLIENTE.PAIS%TYPE) IS
        ESTADO_CLIENTE CLIENTE.ESTADO%TYPE;
        
        BEGIN
            SAVEPOINT MODIFICAR_CLIENTE;
            SELECT C.ESTADO INTO ESTADO_CLIENTE FROM CLIENTE C WHERE C.IDENT = IDENTIDAD;
            IF ESTADO_CLIENTE = 'BAJA' THEN
                RAISE CLIENTE_BAJA_EXCEP;
            ELSE
                UPDATE CLIENTE C
                    SET 
                        C.ESTADO = EST,
                        C.FECHA_BAJA = FB,
                        C.DIRECCION = DIR,
                        C.CIUDAD = CIUD,
                        C.CODIGO_POSTAL = CP,
                        C.PAIS = P
                WHERE C.IDENT = IDENT;
            END IF;
            COMMIT;
        EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK TO MODIFICAR_CLIENTE;
                RAISE;
        END;
        
    PROCEDURE BAJA_CLIENTE(IDENTIDAD IN CLIENTE.IDENT%TYPE, FB IN CLIENTE.FECHA_BAJA%TYPE) IS
        CLIENTE_BAJA CLIENTE.ESTADO%TYPE;
        CUENTAS_CLIENTE NUMBER;
        
        BEGIN
            SAVEPOINT BAJA_CLIENTE;
            SELECT C.ESTADO INTO CLIENTE_BAJA FROM CLIENTE C WHERE C.IDENT = IDENTIDAD;
            SELECT COUNT(IBAN) INTO CUENTAS_CLIENTE FROM CTA_FINTECH CF JOIN CLIENTE C ON (C.ID = CF.CLIENTE_ID) WHERE C.IDENT = IDENT;
            
            IF CUENTAS_CLIENTE != 0 THEN
                RAISE CLIENTE_CUENTAS_EXCEP;
            END IF;
            
            IF CLIENTE_BAJA = 'BAJA' THEN RAISE CLIENTE_BAJA_EXCEP;
            ELSE
                UPDATE CLIENTE C
                    SET
                        C.ESTADO = 'BAJA',
                        C.FECHA_BAJA = FB
                    WHERE C.IDENT = IDENT;
            END IF;
            COMMIT;
        EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK TO BAJA_CLIENTE;
                RAISE;
        END;
        
    PROCEDURE ALTA_AUTORIZADO(ID_JURIDICA IN CLIENTE.ID%TYPE, TIPO_AUTORIZ IN AUTORIZACION.TIPO%TYPE,
                                ID_AUTORIZADA IN PERS_AUTORIZ.ID%TYPE, IDENTIDAD IN PERS_AUTORIZ.IDENT%TYPE,
                                NOM IN PERS_AUTORIZ.NOMBRE%TYPE, APEL IN PERS_AUTORIZ.APELLIDO%TYPE,
                                DIR IN PERS_AUTORIZ.DIRECCION%TYPE, FECH_NAC IN PERS_AUTORIZ.FECHA_NACIMIENTO%TYPE,
                                FECH_INIC IN PERS_AUTORIZ.FECHA_INICIO%TYPE, FECH_FIN IN PERS_AUTORIZ.FECHA_FIN%TYPE) IS
        ESTA_JURIDICA NUMBER;
        ESTA_AUTORIZADA NUMBER;
            
        BEGIN
            SAVEPOINT ALTA_AUTORIZADO;
            SELECT COUNT(E.ID) INTO ESTA_JURIDICA FROM EMPRESA E WHERE E.ID = ID_JURIDICA;
            SELECT COUNT(A.ID) INTO ESTA_AUTORIZADA FROM PERS_AUTORIZ A WHERE A.ID = ID_AUTORIZADA;
                
            IF ESTA_JURIDICA = 0 THEN
                RAISE JURIDICA_INEXISTENTE_EXCEP;
            END IF;
            
            -- PARA EL EJERCICIO 2.B DONDE PONE ID_AUTORIZADA HABRIA QUE PONER SQ_PERSONA.NEXTVAL
            IF ESTA_AUTORIZADA = 0 THEN
                INSERT INTO PERS_AUTORIZ P
                    (P.ID, P.IDENT, P.NOMBRE, P.APELLIDO, P.DIRECCION, P.FECHA_NACIMIENTO, P.ESTADO, P.FECHA_INICIO, P.FECHA_FIN)
                    VALUES
                    (ID_AUTORIZADA, IDENTIDAD, NOM, APEL, DIR, FECH_NAC, 'ACTIVO', FECH_INIC, FECH_FIN);
            END IF;
                    
            IF TIPO_AUTORIZ = 'CON' OR TIPO_AUTORIZ = 'OPE' THEN
                INSERT INTO AUTORIZACION A
                        (A.TIPO, A.PERS_AUTORIZ_ID, A.EMPRESA_ID)
                        VALUES
                        (TIPO_AUTORIZ, ID_AUTORIZADA, ID_JURIDICA);
            ELSE
                RAISE AUTORIZACION_INVALIDA_EXCEP;
            END IF;
            COMMIT;
        EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK TO ALTA_AUTORIZADO;
                RAISE;
        END;
        
    PROCEDURE MODIFICAR_AUTORIZADO(ID_JURIDICA IN CLIENTE.ID%TYPE, ID_AUTORIZADA IN PERS_AUTORIZ.ID%TYPE, 
                                    TIPO_AUTORIZ IN AUTORIZACION.TIPO%TYPE, NOM IN PERS_AUTORIZ.NOMBRE%TYPE,
                                    APEL IN PERS_AUTORIZ.APELLIDO%TYPE, DIR IN PERS_AUTORIZ.DIRECCION%TYPE, 
                                    FECH_NAC IN PERS_AUTORIZ.FECHA_NACIMIENTO%TYPE, ESTAD IN PERS_AUTORIZ.ESTADO%TYPE,
                                    FECH_INIC IN PERS_AUTORIZ.FECHA_INICIO%TYPE, FECH_FIN IN PERS_AUTORIZ.FECHA_FIN%TYPE) IS
        BEGIN
            SAVEPOINT MODIFICAR_AUTORIZADO;
            UPDATE PERS_AUTORIZ PA
                SET 
                    PA.NOMBRE = NOM,
                    PA.APELLIDO = APEL,
                    PA.DIRECCION = DIR,
                    PA.FECHA_NACIMIENTO = FECH_NAC,
                    PA.ESTADO = ESTAD,
                    PA.FECHA_INICIO = FECH_INIC,
                    PA.FECHA_FIN = FECH_FIN
            WHERE PA.ID = ID_AUTORIZADA;
            
            IF TIPO_AUTORIZ = 'CON' OR TIPO_AUTORIZ = 'OPE' THEN
                UPDATE AUTORIZACION AUT
                    SET
                        AUT.TIPO = TIPO_AUTORIZ
                WHERE AUT.EMPRESA_ID = ID_JURIDICA AND AUT.PERS_AUTORIZ_ID = ID_AUTORIZADA;
            ELSE
                RAISE AUTORIZACION_INVALIDA_EXCEP;
            END IF;
            COMMIT;
        EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK TO MODIFICAR_AUTORIZADO;
                RAISE;
        END;
    
    PROCEDURE ELIMINAR_AUTORIZADOS(ID_JURIDICA IN EMPRESA.ID%TYPE) IS
        CURSOR AUTORIZACIONES IS SELECT PERS_AUTORIZ_ID FROM AUTORIZACION WHERE EMPRESA_ID = ID_JURIDICA;
        PA_ID AUTORIZACION.PERS_AUTORIZ_ID%TYPE;
        QUEDAN_AUTORIZACIONES NUMBER;
        
        BEGIN
            SAVEPOINT ELIMINAR_AUTORIZADOS;
            OPEN AUTORIZACIONES;
            LOOP
                FETCH AUTORIZACIONES INTO PA_ID;
                IF AUTORIZACIONES%FOUND THEN
                    DELETE FROM AUTORIZACION A WHERE A.EMPRESA_ID = ID_JURIDICA AND A.PERS_AUTORIZ_ID = PA_ID;
                    SELECT COUNT(PERS_AUTORIZ_ID) INTO QUEDAN_AUTORIZACIONES FROM AUTORIZACION WHERE PERS_AUTORIZ_ID = PA_ID;
                    
                    IF QUEDAN_AUTORIZACIONES = 0 THEN
                        UPDATE PERS_AUTORIZ PA
                            SET
                                PA.ESTADO = 'BORRADO',
                                PA.FECHA_FIN = SYSDATE()
                        WHERE PA.ID = PA_ID;
                    END IF;
                ELSE
                    EXIT;
                END IF;
            END LOOP;
            COMMIT;
        EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK TO ELIMINAR_AUTORIZADOS;
                RAISE;
        END;
END PK_GESTION_CLIENTES;